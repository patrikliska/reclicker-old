{"version":3,"sources":["components/Header/index.js","components/ResourcesBar/index.js","components/LeftActionPanel/index.js","components/MiddleActionPanel/index.js","components/RightActionPanel/Upgrade.js","components/RightActionPanel/index.js","pages/MainPage/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","topBarContainer","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","resourcesContainer","width","display","resourcesIconContainer","backgroundColor","boxShadow","ResourcesBar","resources","addSuffixToNumber","value","newValue","toFixed","replace","toString","suffixNum","Math","floor","length","shortValue","precision","parseFloat","pow","toPrecision","map","resource","ListItem","ListItemAvatar","Avatar","icon","ListItemText","primary","secondary","paper","padding","textAlign","palette","text","miningIconContainer","miningIcon","transition","transform","LeftActionPanel","onTreeClick","getIcon","iconName","IconButtonContainer","children","onClick","disableFocusRipple","disableRipple","toLowerCase","size","Paper","style","fontWeight","marginBottom","Grid","container","item","xs","name","opacity","alignItems","clickChance","MiddleActionPanel","Components","GiMetalBar","GiMinerals","GiGloves","Upgrade","block","React","createElement","key","paperContainer","RightActionPanel","Divider","marginTop","upgrades","upgrade","paddingBottom","category","data","bottom","right","fontSize","lineHeight","root","MainPage","useState","id","idleChance","woodResources","setWoodResources","stoneResources","metalOreResources","metalIngotResources","shinyStoneResources","random","md","App","createMuiTheme","typography","fontFamily","join","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wxDASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,gBAAiB,CACfC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIC,SAASK,IACtB,IAAMC,EAAUV,IAEhB,OACE,qBAAKW,UAAWD,EAAQP,gBAAxB,SACE,cAACS,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLL,UAAWD,EAAQL,WACnBY,MAAM,UACNC,aAAW,OAJb,SAME,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKT,UAAWD,EAAQF,MAA5C,sBAGA,cAACa,EAAA,EAAD,CAAQJ,MAAM,UAAd,0B,2EC5BJjB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoB,mBAAoB,CAClBC,MAAO,IACPC,QAAS,eAEXC,uBAAwB,CACtBC,gBAAiB,UACjBC,UAAW,wCA2DAC,EAvDM,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAChBnB,EAAUV,IAEV8B,EAAoB,SAACC,GACzB,IAAIC,EAAWD,EACZE,QAAQ,GACRC,QAAQ,SAAU,IAClBC,WACAD,QAAQ,wBAAyB,KAEpC,GAAIH,GAAS,IAAS,CAMpB,IALA,IACMK,EAAYC,KAAKC,OAAO,GAAKP,GAAOQ,OAAS,GAE/CC,EAAa,GAERC,EAAY,EAAGA,GAAa,EAAGA,IAAa,CAanD,KAZAD,EAAaE,YACI,IAAdN,EACGL,EAAQM,KAAKM,IAAI,IAAMP,GACvBL,GACFa,YAAYH,KAGwB,IAAIP,QAC1C,kBACA,IAGoBK,QAAU,EAAG,MAGjCC,EAAa,IAAM,IAAGA,EAAaA,EAAWP,QAAQ,IAE1DD,EAAQ,UAAMQ,EAAN,YAvBS,CAAC,GAAI,IAAK,KAAM,KAAM,MAuBFJ,IAGvC,OAAOJ,GAGT,cAAOH,QAAP,IAAOA,OAAP,EAAOA,EAAWgB,KAAI,SAACC,GAAD,OACpB,eAACC,EAAA,EAAD,CAAUpC,UAAWD,EAAQY,mBAA7B,UACE,cAAC0B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQtC,UAAWD,EAAQe,uBAA3B,UACW,OAARqB,QAAQ,IAARA,OAAA,EAAAA,EAAUI,OAAQ,cAAC,IAAD,CAAWjC,MAAM,gBAGxC,cAACkC,EAAA,EAAD,CACEC,QAAStB,EAAiB,OAACgB,QAAD,IAACA,OAAD,EAACA,EAAUf,OACrCsB,UAAS,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAUtC,eCzDvBR,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoD,MAAO,CACLC,QAASrD,EAAMK,QAAQ,GACvBiD,UAAW,OACXvC,MAAOf,EAAMuD,QAAQC,KAAKL,WAE5BM,oBAAqB,CACnBJ,QAAS,EACT,UAAW,CACT7B,gBAAiB,gBAGrBkC,WAAY,CACVC,WAAY,sBACZ,WAAY,CACVC,UAAW,mBAyEFC,EApES,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,YAAanC,EAAgB,EAAhBA,UAChCnB,EAAUV,IAEViE,EAAU,SAACC,GACf,IAAMC,EAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,QAAb,OAC1B,cAACtD,EAAA,EAAD,CACEJ,UAAWD,EAAQiD,oBACnBU,QAAS,kBAAMA,KACfC,oBAAkB,EAClBC,eAAa,EAJf,SAMGH,KAIL,OAAQF,EAASM,eACf,IAAK,OACH,OACE,cAACL,EAAD,CAAqBE,QAASL,EAA9B,SACE,cAAC,IAAD,CACES,KA1CG,GA2CHxD,MAAM,UACNN,UAAWD,EAAQkD,eAI3B,QACE,OACE,cAACO,EAAD,UACE,cAAC,IAAD,CAAYM,KAnDP,GAmDuB9D,UAAWD,EAAQkD,iBAMzD,OACE,eAACc,EAAA,EAAD,CAAO/D,UAAWD,EAAQ4C,MAA1B,UACE,cAACnC,EAAA,EAAD,CACEC,QAAQ,KACRuD,MAAO,CAAEnB,UAAW,SAAUoB,WAAY,IAAKC,aAAc,GAF/D,mBAMA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACxE,QAAS,EAAzB,gBACGsB,QADH,IACGA,OADH,EACGA,EAAWgB,KAAI,SAACC,GAAD,OACd,cAACgC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAACP,EAAA,EAAD,CAAO/D,UAAWD,EAAQ4C,MAAOqB,MAAO,CAAEnD,QAAS,QAAnD,UACGyC,EAAO,OAACnB,QAAD,IAACA,OAAD,EAACA,EAAUoC,MACnB,eAAC/D,EAAA,EAAD,CACEC,QAAQ,YACRuD,MAAO,CACLQ,QAAS,IACT3B,UAAW,QACXjC,MAAO,OACPC,QAAS,OACT4D,WAAY,OAPhB,gCAU8C,KAAhB,OAARtC,QAAQ,IAARA,OAAA,EAAAA,EAAUuC,aAVhC,qBCxERrF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoD,MAAO,CACLC,QAASrD,EAAMK,QAAQ,GACvBiD,UAAW,OACXvC,MAAOf,EAAMuD,QAAQC,KAAKL,eAuCfiC,EAnCW,WACxB,IAAM5E,EAAUV,IAEhB,OACE,eAAC0E,EAAA,EAAD,CAAO/D,UAAWD,EAAQ4C,MAA1B,UACE,cAACnC,EAAA,EAAD,CACEC,QAAQ,KACRuD,MAAO,CAAEnB,UAAW,SAAUoB,WAAY,IAAKC,aAAc,GAF/D,kBAMA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACxE,QAAS,EAAzB,UACE,cAACuE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACP,EAAA,EAAD,CAAO/D,UAAWD,EAAQ4C,MAA1B,qBAEF,cAACwB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACP,EAAA,EAAD,CAAO/D,UAAWD,EAAQ4C,MAA1B,qBAEF,cAACwB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACP,EAAA,EAAD,CAAO/D,UAAWD,EAAQ4C,MAA1B,qBAEF,cAACwB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACP,EAAA,EAAD,CAAO/D,UAAWD,EAAQ4C,MAA1B,qBAEF,cAACwB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACP,EAAA,EAAD,CAAO/D,UAAWD,EAAQ4C,MAA1B,qBAEF,cAACwB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACP,EAAA,EAAD,CAAO/D,UAAWD,EAAQ4C,MAA1B,4B,QCnCJiC,EAAa,CACjBC,eACAC,eACAC,cAkBaC,EAfC,SAACC,GACf,MAAsC,qBAA3BL,EAAWK,EAAM1C,MACnB2C,IAAMC,cAAcP,EAAWK,EAAM1C,MAAO,CACjD6C,IAAKH,EAAMpF,MACXS,MAAK,OAAE2E,QAAF,IAAEA,OAAF,EAAEA,EAAO3E,MACdwD,KAAM,GACNmB,MAAOA,IAIJC,IAAMC,eAAc,kBACzB,4CAAeF,EAAM1C,KAArB,oC,QCbElD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8F,eAAgB,CACdzC,QAASrD,EAAMK,QAAQ,GACvBiD,UAAW,OACXvC,MAAOf,EAAMuD,QAAQC,KAAKL,WAE5BC,MAAO,CACLC,QAASrD,EAAMK,QAAQ,GACvBiD,UAAW,SACXvC,MAAOf,EAAMuD,QAAQC,KAAKL,eAkEf4C,EA9DU,WACvB,IAAMvF,EAAUV,IAEhB,OACE,eAAC0E,EAAA,EAAD,CAAO/D,UAAWD,EAAQsF,eAA1B,UACE,eAAC7E,EAAA,EAAD,CACEC,QAAQ,KACRuD,MAAO,CAAEnB,UAAW,SAAUoB,WAAY,IAAKC,aAAc,GAF/D,qBAKE,cAACqB,EAAA,EAAD,CAASvB,MAAO,CAAEwB,UAAW,SAE/B,cAACrB,EAAA,EAAD,CAAMC,WAAS,EAACxE,QAAS,EAAzB,SACG6F,EAASvD,KAAI,SAACwD,GAAD,OACZ,qCACE,cAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIN,MAAO,CAAE2B,cAAe,GAAKlB,WAAW,SAA3D,SACE,cAACjE,EAAA,EAAD,CACEC,QAAQ,KACRuD,MAAO,CAAEnB,UAAW,SAAUoB,WAAY,KAF5C,gBAIGyB,QAJH,IAIGA,OAJH,EAIGA,EAASE,aANhB,OASGF,QATH,IASGA,OATH,EASGA,EAASG,KAAK3D,KAAI,SAACmC,GAAD,OACjB,cAACF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACP,EAAA,EAAD,CACE/D,UAAWD,EAAQ4C,MACnBqB,MAAO,CAAE9D,SAAU,YAFrB,UAaE,cAACM,EAAA,EAAD,CACEC,QAAQ,YACRuD,MAAO,CACL9D,SAAU,WACV4F,OAAQ,EACRC,MAAO,EACPlD,UAAW,OACXmD,SAAU,GACVC,WAAY,SARhB,kBAaCjB,EAAQX,uBC3DrBhF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2G,KAAM,CACJzG,SAAU,GAEZkD,MAAO,CACLC,QAASrD,EAAMK,QAAQ,GACvBiD,UAAW,SACXvC,MAAOf,EAAMuD,QAAQC,KAAKL,eA6GfyD,EAvFE,WACf,IAAMpG,EAAUV,IADK,EAGqB+G,mBAAS,CACjD1B,YAAa,IACbnC,KAAM,cAAC,IAAD,CAAYjC,MAAM,YACxB+F,GAAI,EACJC,WAAY,GACZ/B,KAAM,OACNb,QAAS,kBAAML,KACfxD,MAAO,OACPuB,MAAO,IAXY,mBAGdmF,EAHc,KAGCC,EAHD,OAcuBJ,mBAAS,CACnDC,GAAI,EACJ9B,KAAM,QACN1E,MAAO,QACPuB,MAAO,EACPmB,KAAM,cAAC,IAAD,CAAajC,MAAM,cAnBN,mBAcdmG,EAdc,aAsB6BL,mBAAS,CACzDC,GAAI,EACJ9B,KAAM,YACN1E,MAAO,YACPuB,MAAO,EACPmB,KAAM,cAAC,IAAD,CAAajC,MAAM,eA3BN,mBAsBdoG,EAtBc,aA8BiCN,mBAAS,CAC7DC,GAAI,EACJ9B,KAAM,cACN1E,MAAO,cACPuB,MAAO,EACPmB,KAAM,cAAC,IAAD,CAAYjC,MAAM,eAnCL,mBA8BdqG,EA9Bc,aAsCiCP,mBAAS,CAC7DC,GAAI,EACJ9B,KAAM,cACN1E,MAAO,cACPuB,MAAO,EACPmB,KAAM,cAAC,IAAD,CAAYjC,MAAM,eA3CL,mBAsCdsG,EAtCc,KA8Cf1F,GA9Ce,KA8CH,CAChBqF,EACAE,EACAC,EACAC,EACAC,IAGIvD,EAAc,WACd3B,KAAKmF,SAAWN,EAAc7B,aAChC8B,EAAiB,2BAAKD,GAAN,IAAqBnF,MAAOmF,EAAcnF,MAAQ,OAOtE,OACE,sBAAKpB,UAAWD,EAAQmG,KAAxB,UACE,cAAC/B,EAAA,EAAD,CAAMC,WAAS,EAACxE,QAAS,EAAzB,SACE,cAACuE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACP,EAAA,EAAD,CAAO/D,UAAWD,EAAQ4C,MAA1B,SACE,cAAC,EAAD,CAAczB,UAAWA,UAI/B,eAACiD,EAAA,EAAD,CAAMC,WAAS,EAACxE,QAAS,EAAzB,UACE,cAACuE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIwC,IAAE,EAArB,SACE,cAAC,EAAD,CAAiB5F,UAAWA,EAAWmC,YAAaA,MAEtD,cAACc,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIwC,GAAI,EAAvB,SACE,cAAC,EAAD,MAEF,cAAC3C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIwC,IAAE,EAArB,SACE,cAAC,EAAD,aC/FKC,EA7BH,WACV,IAAMxH,EAAQyH,YAAe,CAC3BC,WAAY,CACVC,WAAY,CACV,QACA,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,QAIX,OACE,eAACC,EAAA,EAAD,CAAe7H,MAAOA,EAAtB,UACE,cAAC,EAAD,IACA,qBAAKS,UAAU,iBAAiBgE,MAAO,CAAEpB,QAAS,IAAlD,SACE,cAAC,EAAD,UChBOyE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3383d133.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  topBarContainer: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.topBarContainer}>\n      <AppBar position='static'>\n        <Toolbar>\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='menu'\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h5' className={classes.title}>\n            Homepage\n          </Typography>\n          <Button color='inherit'>Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { GiBarrier } from 'react-icons/gi';\n\nconst useStyles = makeStyles((theme) => ({\n  resourcesContainer: {\n    width: 200,\n    display: 'inline-flex',\n  },\n  resourcesIconContainer: {\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 0px 5px 0px rgba(0,0,0,0.15)',\n  },\n}));\n\nconst ResourcesBar = ({ resources }) => {\n  const classes = useStyles();\n\n  const addSuffixToNumber = (value) => {\n    let newValue = value\n      .toFixed(2)\n      .replace(/\\.?0+$/, '')\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\n    if (value >= 1000000) {\n      const suffixes = ['', 'k', 'M.', 'B.', 'T.'];\n      const suffixNum = Math.floor(('' + value).length / 3);\n\n      let shortValue = '';\n\n      for (let precision = 2; precision >= 1; precision--) {\n        shortValue = parseFloat(\n          (suffixNum !== 0\n            ? value / Math.pow(1000, suffixNum)\n            : value\n          ).toPrecision(precision)\n        );\n\n        const dotLessShortValue = (shortValue + '').replace(\n          /[^a-zA-Z 0-9]+/g,\n          ''\n        );\n\n        if (dotLessShortValue.length <= 2) break;\n      }\n\n      if (shortValue % 1 !== 0) shortValue = shortValue.toFixed(1);\n\n      newValue = `${shortValue} ${suffixes[suffixNum]}`;\n    }\n\n    return newValue;\n  };\n\n  return resources?.map((resource) => (\n    <ListItem className={classes.resourcesContainer}>\n      <ListItemAvatar>\n        <Avatar className={classes.resourcesIconContainer}>\n          {resource?.icon || <GiBarrier color='#2C377C' />}\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={addSuffixToNumber(resource?.value)}\n        secondary={resource?.title}\n      />\n    </ListItem>\n  ));\n};\n\nexport default ResourcesBar;\n","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { GiPineTree, GiGoldMine } from 'react-icons/gi';\n\nconst iconSize = 50;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'left',\n    color: theme.palette.text.secondary,\n  },\n  miningIconContainer: {\n    padding: 0,\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n  miningIcon: {\n    transition: 'all .1s ease-in-out',\n    '&:active': {\n      transform: 'scale(1.2)',\n    },\n  },\n}));\n\nconst LeftActionPanel = ({ onTreeClick, resources }) => {\n  const classes = useStyles();\n\n  const getIcon = (iconName) => {\n    const IconButtonContainer = ({ children, onClick }) => (\n      <IconButton\n        className={classes.miningIconContainer}\n        onClick={() => onClick()}\n        disableFocusRipple\n        disableRipple\n      >\n        {children}\n      </IconButton>\n    );\n\n    switch (iconName.toLowerCase()) {\n      case 'wood':\n        return (\n          <IconButtonContainer onClick={onTreeClick}>\n            <GiPineTree\n              size={iconSize}\n              color='#708238'\n              className={classes.miningIcon}\n            />\n          </IconButtonContainer>\n        );\n      default:\n        return (\n          <IconButtonContainer>\n            <GiGoldMine size={iconSize} className={classes.miningIcon} />\n          </IconButtonContainer>\n        );\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography\n        variant='h4'\n        style={{ textAlign: 'center', fontWeight: 500, marginBottom: 5 }}\n      >\n        Mines\n      </Typography>\n      <Grid container spacing={1}>\n        {resources?.map((resource) => (\n          <Grid item xs={12}>\n            <Paper className={classes.paper} style={{ display: 'flex' }}>\n              {getIcon(resource?.name)}\n              <Typography\n                variant='subtitle2'\n                style={{\n                  opacity: 0.35,\n                  textAlign: 'right',\n                  width: '100%',\n                  display: 'grid',\n                  alignItems: 'end',\n                }}\n              >\n                Chance to succeed: {resource?.clickChance * 100}%\n              </Typography>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default LeftActionPanel;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { GiPineTree, GiGoldMine } from 'react-icons/gi';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'left',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst MiddleActionPanel = () => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography\n        variant='h4'\n        style={{ textAlign: 'center', fontWeight: 500, marginBottom: 5 }}\n      >\n        Town\n      </Typography>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>xs=12</Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>xs=12</Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>xs=12</Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>xs=12</Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>xs=12</Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>xs=12</Paper>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default MiddleActionPanel;\n","import React from 'react';\n\nimport {\n  GiMetalBar,\n  GiMinerals,\n  GiGloves,\n  GiMineWagon,\n  GiStonePile,\n  GiWoodPile,\n} from 'react-icons/gi';\n\nconst Components = {\n  GiMetalBar,\n  GiMinerals,\n  GiGloves,\n};\n\nconst Upgrade = (block) => {\n  if (typeof Components[block.icon] !== 'undefined') {\n    return React.createElement(Components[block.icon], {\n      key: block.title,\n      color: block?.color,\n      size: 30,\n      block: block,\n    });\n  }\n\n  return React.createElement(() => (\n    <div>The icon {block.icon} has not been created yet.</div>\n  ));\n};\n\nexport default Upgrade;\n","import React from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { GiArrowCluster } from 'react-icons/gi';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Upgrade from './Upgrade';\n\nimport upgrades from './upgrades.json';\n\nconst useStyles = makeStyles((theme) => ({\n  paperContainer: {\n    padding: theme.spacing(2),\n    textAlign: 'left',\n    color: theme.palette.text.secondary,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst RightActionPanel = () => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paperContainer}>\n      <Typography\n        variant='h4'\n        style={{ textAlign: 'center', fontWeight: 500, marginBottom: 5 }}\n      >\n        Upgrades\n        <Divider style={{ marginTop: 10 }} />\n      </Typography>\n      <Grid container spacing={2}>\n        {upgrades.map((upgrade) => (\n          <>\n            <Grid item xs={12} style={{ paddingBottom: 0 }} alignItems='center'>\n              <Typography\n                variant='h6'\n                style={{ textAlign: 'center', fontWeight: 300 }}\n              >\n                {upgrade?.category}\n              </Typography>\n            </Grid>\n            {upgrade?.data.map((item) => (\n              <Grid item xs={3}>\n                <Paper\n                  className={classes.paper}\n                  style={{ position: 'relative' }}\n                >\n                  {/* <GiArrowCluster\n                    style={{\n                      position: 'absolute',\n                      bottom: 5,\n                      left: 7,\n                      textAlign: 'left',\n                      fontSize: 10,\n                    }}\n                  /> */}\n                  <Typography\n                    variant='subtitle1'\n                    style={{\n                      position: 'absolute',\n                      bottom: 5,\n                      right: 7,\n                      textAlign: 'left',\n                      fontSize: 12,\n                      lineHeight: 'unset',\n                    }}\n                  >\n                    0/10\n                  </Typography>\n                  {Upgrade(item)}\n                </Paper>\n              </Grid>\n            ))}\n          </>\n        ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default RightActionPanel;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  GiMetalBar,\n  GiMinerals,\n  GiMineWagon,\n  GiStonePile,\n  GiWoodPile,\n} from 'react-icons/gi';\n\nimport ResourcesBar from '../../components/ResourcesBar';\nimport LeftActionPanel from '../../components/LeftActionPanel';\nimport MiddleActionPanel from '../../components/MiddleActionPanel';\nimport RightActionPanel from '../../components/RightActionPanel';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    let id = setInterval(() => {\n      savedCallback.current();\n    }, delay);\n\n    return () => clearInterval(id);\n  }, [delay]);\n};\n\nconst MainPage = () => {\n  const classes = useStyles();\n\n  const [woodResources, setWoodResources] = useState({\n    clickChance: 0.25,\n    icon: <GiWoodPile color='#5d2906' />,\n    id: 0,\n    idleChance: 0.1,\n    name: 'wood',\n    onClick: () => onTreeClick(),\n    title: 'Wood',\n    value: 0,\n  });\n\n  const [stoneResources, setStoneResources] = useState({\n    id: 1,\n    name: 'stone',\n    title: 'Stone',\n    value: 0,\n    icon: <GiStonePile color='#888C8D' />,\n  });\n\n  const [metalOreResources, setMetalOreResources] = useState({\n    id: 2,\n    name: 'metal-ore',\n    title: 'Metal ore',\n    value: 0,\n    icon: <GiMineWagon color='#474f52' />,\n  });\n\n  const [metalIngotResources, setMetalIngotResources] = useState({\n    id: 3,\n    name: 'metal-ingot',\n    title: 'Metal ingot',\n    value: 0,\n    icon: <GiMetalBar color='#C0C2C4' />,\n  });\n\n  const [shinyStoneResources, setShinyStoneResources] = useState({\n    id: 4,\n    name: 'shiny-stone',\n    title: 'Shiny stone',\n    value: 0,\n    icon: <GiMinerals color='#8B7CDB' />,\n  });\n\n  const resources = [\n    woodResources,\n    stoneResources,\n    metalOreResources,\n    metalIngotResources,\n    shinyStoneResources,\n  ];\n\n  const onTreeClick = () => {\n    if (Math.random() < woodResources.clickChance)\n      setWoodResources({ ...woodResources, value: woodResources.value + 0.1 });\n  };\n\n  // useInterval(() => {\n  //   setWoodResources({ ...woodResources, value: woodResources.value + 333 });\n  // }, 100);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <ResourcesBar resources={resources} />\n          </Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md>\n          <LeftActionPanel resources={resources} onTreeClick={onTreeClick} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <MiddleActionPanel />\n        </Grid>\n        <Grid item xs={12} md>\n          <RightActionPanel />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport Header from './components/Header';\nimport MainPage from './pages/MainPage';\n\nconst App = () => {\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: [\n        'Dosis',\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Header />\n      <div className='innerContainer' style={{ padding: 20 }}>\n        <MainPage />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}